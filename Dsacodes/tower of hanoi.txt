#include <stdio.h>

// Function to solve Tower of Hanoi
void towerOfHanoi(int n, char source, char destination, char auxiliary) {
    // Base case: when there is only one disk, move it from source to destination
    if (n == 1) {
        printf("Move disk 1 from %c to %c\n", source, destination);
        return;
    }
    
    // Recursive case:
    // 1. Move (n-1) disks from source to auxiliary rod
    towerOfHanoi(n - 1, source, auxiliary, destination);
    
    // 2. Move the nth disk from source to destination rod
    printf("Move disk %d from %c to %c\n", n, source, destination);
    
    // 3. Move the (n-1) disks from auxiliary to destination rod
    towerOfHanoi(n - 1, auxiliary, destination, source);
}

int main() {
    int n; // Number of disks
    printf("Enter the number of disks: ");
    scanf("%d", &n);
    
    // A, B, and C are names of rods
    towerOfHanoi(n, 'A', 'C', 'B');
    
    return 0;
}
